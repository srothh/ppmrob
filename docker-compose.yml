version: "3"
volumes:
  workspace:
services:
  ros_master:
    image: ros:noetic-ros-base
    command: roscore
    stdin_open: true
    tty: true
    ports:
      - "11311:11311"
    networks:
      - ppmrob
  cv:
    build: ./src/cv/cv_node
    # environment:
    #   - DISPLAY=host.docker.internal:0 # Uncomment only if running VcXsrv on Windows (https://sourceforge.net/projects/vcxsrv/), it will show gui things like imshow(). Will cause crash without it.
    #   - "NVIDIA_VISIBLE_DEVICES=all" GPU needs extra work
    env_file:
      - docker.env
    networks:
      - ppmrob
    depends_on:
      - ros_master
  drone:
    build:
      context: ./src
      dockerfile: ./drone/Dockerfile
    env_file:
      - docker.env
    ports:
      - "8889:8889/udp"
      - "8890:8890/udp"
      - "11111:11111/udp"
    networks:
      - ppmrob
    depends_on:
      - ros_master
  # DO NOT start drone_dummy together with drone
  # drone_dummy:
  #   build:
  #     context: ./src
  #     dockerfile: ./drone_dummy/Dockerfile
  #   env_file:
  #     - docker.env
  #   networks:
  #     - ppmrob
  #   depends_on:
  #     - ros_master
  cockpit:
    build:
      context: ./src
      dockerfile: ./cockpit/Dockerfile
    environment:
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
    env_file:
      - docker.env
    networks:
      - ppmrob
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      - ros_master
  control:
    build:
      dockerfile: ./src/control/Dockerfile
    env_file:
      - docker.env
    ports:
      - "9006:9006"
    networks:
      - ppmrob
    depends_on:
      - ros_master
  mapping:
    build: ./src/mapping
    env_file:
      - docker.env
    ports:
      - "9007:9007"
    volumes:
      - ./src/mapping/occ_grid.npy:/catkin_ws/src/mapping/occ_grid.npy
    networks:
      - ppmrob
    depends_on:
      - ros_master
  planner:
    build:
      # If not set explicitly, context defaults to project directory (.).
      # relative ==> resolved from the Compose file's parent folder
      # context: ./src/
      # relative ==> resolved from the build context
      dockerfile: ./src/planner/Dockerfile
    env_file:
      # paths are relative to the location of `compose.yml` file
      - docker.env
      - docker_planner_vars.env
    networks:
      - ppmrob
    depends_on:
      # FIXME adjust to actual dependencies
      - ros_master
      - control
      - mapping
      # mapping_simulation:
      #   build: ./src/mapping_simulation
      #   env_file:
      #     - docker.env
      #   ports:
      #     - "9009:9009"
      #   networks:
      #     - ppmrob
      #   depends_on:
      #     - ros_master
      #   working_dir: /catkin_ws/src/mapping_simulation/scripts
      #   # stdin_open: true  # Keeps STDIN open
      #   # tty: true         # Allocates a pseudo-TTY
  rviz:
    build: ./src/rviz
    networks:
      - ppmrob
    depends_on:
      - ros_master
    environment:
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
      - ROS_MASTER_URI=http://ros_master:11311
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
  ros_gui:
    image: osrf/ros:noetic-desktop-full
    command: rqt
    environment:
      - "ROS_MASTER_URI=http://ros_master:11311"
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1"
    depends_on:
      - ros_master
    networks:
      - ppmrob
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
networks:
  ppmrob:
    driver: "bridge"
